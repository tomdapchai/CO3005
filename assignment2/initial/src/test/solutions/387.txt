Program([FuncDecl(power,[ParDecl(base,FloatType),ParDecl(exponent,IntType)],FloatType,Block([If(BinaryOp(Id(exponent),==,IntLiteral(0)),Block([Return(FloatLiteral(1.0))])),If(BinaryOp(Id(exponent),<,IntLiteral(0)),Block([Assign(Id(base),BinaryOp(FloatLiteral(1.0),/,Id(base))),Assign(Id(exponent),UnaryOp(-,Id(exponent)))])),Assign(Id(result),FloatLiteral(1.0)),For(Assign(Id(i),IntLiteral(0)),BinaryOp(Id(i),<,Id(exponent)),Assign(Id(i),BinaryOp(Id(i),+,IntLiteral(1))),Block([Assign(Id(result),BinaryOp(Id(result),*,Id(base)))])),Return(Id(result))]))])