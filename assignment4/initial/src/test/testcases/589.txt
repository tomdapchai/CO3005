
        type Shape interface {
            area() float;
            perimeter() float;
        }
        
        type Rectangle struct {
            width float;
            height float;
        }
        
        type Circle struct {
            radius float;
        }
        
        func (r Rectangle) area() float {
            return r.width * r.height;
        }
        
        func (r Rectangle) perimeter() float {
            return 2 * (r.width + r.height);
        }
        
        func (c Circle) area() float {
            return 3.14 * c.radius * c.radius;
        }
        
        func (c Circle) perimeter() float {
            return 2 * 3.14 * c.radius;
        }
        
        func printShapeInfo(s Shape) {
            putFloatLn(s.area());
            putFloatLn(s.perimeter());
        }
        
        func main() {
            var r Shape = Rectangle{width: 5.0, height: 3.0};
            var c Shape = Circle{radius: 2.0};
            
            putStringLn("Rectangle:");
            printShapeInfo(r);
            
            putStringLn("Circle:");
            printShapeInfo(c);
        }
        