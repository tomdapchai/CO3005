
        type A interface {
            test1() int;
            foo(a int) int;
            foo1(b int) int;
        }
        func foo() B {
            return B{x: 1};
        }
        type B struct {
            x int;
        }
        func (b B) test1() int {
            return b.x;
        }
        func (b B) foo(a int) int {
            return b.x + a;
        }
        func (b B) foo1(c int) int {
            return b.x;
        }
        func main(){
            var a A;
            a := foo();
            putInt(a.test1());
            putInt(a.foo(1));
            putInt(a.foo1(2));
            putInt(a.foo2(3));
        }
        